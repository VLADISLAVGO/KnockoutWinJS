function ViewModel() { "use strict"; function t(n, t) { var i = t ? -1 : 1; return function (t, r) { return t[n] == r[n] ? 0 : t[n] > r[n] ? i : -i } } function n(n) { var t = this; t.template = "Control"; t.options = {}; t.editors = []; $.extend(!0, t, n); t.editors && ($.map(t.editors, function (n) { if (n.type != "action") { var i = ko.observable(t.options[n.name] || n.value); t.options[n.name] = i; n.value = i; n.name == "element" && i.subscribe(function (t) { n.value = t }) } return n }), t.isReady && (t.editors = ko.observableArray(t.editors))) } var r = this, l = $.map(Object.keys(Toolkit.WinJS), function (n) { return n }), a, ot, u, ht, c; l.sort(); a = $("pivot"); ot = a.find("pivot-itemtemplate")[0]; r.setLabel = function () { var t = r.target(), n = t.control(); n && (n.label = "xxx") }; var i = function () { var n = $.map(Object.keys(WinJS.UI.AppBarIcon), function (n) { return n }); return $.map(n, function (n) { return { label: n, tooltip: n, icon: WinJS.UI.AppBarIcon[n], onclick: function () { alert(this.label + " clicked!") } } }) }(), s = { name: "label", type: "string", value: "command" }, v = { name: "icon", type: "selector", options: $.map(i, function (n) { return { label: n.label, value: n.icon } }).sort(t("label")) }, y = { name: "tooltip", type: "string", value: "command tooltip" }, f = { name: "disabled", type: "boolean" }, h = { name: "extraClass", type: "string", value: "extraClass" }, p = { name: "placement", type: "selector", options: [{ label: "top", value: "top" }, { label: "bottom", value: "bottom" }, { label: "auto", value: "auto" }, { label: "autovertical", value: "autovertical" }, { label: "autohorizontal", value: "autohorizontal" }, { label: "left", value: "left" }, { label: "right", value: "right" }], value: "top" }, w = { name: "placement", type: "selector", options: [{ label: "top", value: "top" }, { label: "bottom", value: "bottom" }], value: "top" }, b = { name: "sticky", type: "boolean", value: !0 }, k = { name: "orientation", type: "selector", options: $.map(WinJS.UI.Orientation, function (n, t) { return { label: t, value: n } }), value: "top" }, ct = { name: "swipeBehavior", type: "selector", options: $.map(WinJS.UI.SwipeBehavior, function (n, t) { return { label: t, value: n } }), value: "none" }, d = { name: "tapBehaviour", type: "selector", options: $.map(WinJS.UI.TapBehavior, function (n, t) { return { label: t, value: n } }), value: "none" }, g = { name: "indexOfFirstVisible", type: "number", value: -1 }, nt = { name: "scrollPosition", type: "number", value: 0 }, tt = { name: "header", type: "string", value: "Header" }, it = { name: "selected", type: "boolean", value: !1 }, rt = { name: "current", type: "string", value: new Date }, e = { name: "hide", type: "action", disabled: !0 }, o = { name: "show", type: "action", disabled: !0 }, ut = [{ name: "id", type: "string" }, f, it, { name: "hidden", type: "boolean" }, { name: "type", type: "selector", options: [{ label: "button", value: "button" }, { label: "toggle", value: "toggle" }, { label: "flyout", value: "flyout" }, { label: "content", value: "content" }, { label: "separator", value: "separator" }] }, { name: "flyout", type: "object", value: null, disabled: !0 }, h], st = [{ name: "priority", type: "selector", options: [{ label: "0", value: 0 }, { label: "1", value: 1 }, { label: "2", value: 2 }, { label: "3", value: 3 }, { label: "4", value: 4 }, { label: "5", value: 5 }, { label: "6", value: 6 }, { label: "7", value: 7 }, { label: "8", value: 8 }, { label: "9", value: 9 }, { label: "10", value: 10 }] }, { name: "section", type: "selector", options: [{ label: "default", value: null }, { label: "primary", value: "primary" }, { label: "secondary", value: "secondary" }] }, { name: "firstElementFocus", type: "object", value: null }, { name: "lastElementFocus", type: "object", value: null }], ft = [f, { name: "chooseSuggestionOnEnter", type: "boolean" }, { name: "searchHistoryDisabled", type: "boolean", value: !0 }, { name: "placeholderText", type: "string", value: "placeholderText" }, { name: "queryText", type: "string", value: "" }, { name: "searchHistoryContext", type: "object" }], et = [p, { name: "alignment", type: "selector", options: [{ label: "center", value: "center" }, { label: "left", value: "left" }, { label: "right", value: "right" }], value: "center" }, { name: "anchor", type: "object", disabled: !0 }, e, o].sort(t("name")); r.commands = i; r.isPaneOpened = ko.observable(!0); r.appcommands = [{ label: "open pane", icon: "openpane", type: "toggle", selected: r.isPaneOpened(), onclick: function () { r.isPaneOpened(!r.isPaneOpened()) } }, ]; r.items = $.map(l, function (u) { var ct = $.extend({}, Toolkit.WinJS[u]), ot = {}, c = null, l = null, a; switch (u) { case "AppBar": c = null; l = new n({ isReady: !0, options: { itemsSource: ko.observableArray(i.slice(0, 15)) }, editors: [{ name: "closedDisplayMode", type: "selector", options: [{ label: "compact", value: "compact" }, { label: "minimal", value: "minimal" }, { label: "none", value: "none" }] }, w, { name: "layout", type: "selector", options: [{ label: "menu", value: "menu" }, { label: "commands", value: "commands" }, { label: "custom", value: "custom" }], value: "menu" }, f, b, e, o].sort(t("name")) }); break; case "AppBarCommand": case "Command": c = null; l = new n({ isReady: !0, editors: [s, v, y].concat(ut, st).sort(t("name")) }); break; case "AutoSuggestBox": c = null; l = new n({ isReady: !0, options: { onsuggestionsrequested: function (n) { var u = n.detail, f = u.queryText, e = f.toLowerCase(), s = u.searchSuggestionCollection, t, o, r; if (f.length > 0) for (t = 0, o = i.length; t < o; t++) r = i[t].label, r.substr(0, e.length).toLowerCase() === e && s.appendQuerySuggestion(r) }, onquerysubmitted: function () { } }, editors: ft.sort(t("name")) }); break; case "BackButton": c = null; l = new n({ isReady: !0, editors: [{ name: "refresh", type: "action", disabled: !0 }] }); break; case "ContentDialog": c = null; l = new n({ isReady: !0, template: "ContentDialog", editors: [{ name: "primaryCommandDisabled", type: "boolean" }, { name: "secondaryCommandDisabled", type: "boolean" }, { name: "primaryCommandText", type: "string", value: "Primary Command Text" }, { name: "secondaryCommandText", type: "string", value: "Secondary Command Text" }, { name: "title", type: "string", value: "ContentDialog Title" }, e, o].sort(t("name")) }); break; case "DatePicker": c = null; l = new n({ isReady: !0, editors: [{ name: "calendar", type: "selector", options: [{ label: "default", value: null }, { label: "GregorianCalendar", value: "GregorianCalendar" }, { label: "JulianCalendar", value: "JulianCalendar" }, { label: "HebrewCalendar", value: "HebrewCalendar" }, { label: "HijriCalendar", value: "HijriCalendar" }, { label: "JapaneseCalendar", value: "JapaneseCalendar" }, { label: "KoreanCalendar", value: "KoreanCalendar" }, { label: "ThaiCalendar", value: "ThaiCalendar" }, { label: "TaiwanCalendar", value: "TaiwanCalendar" }, { label: "UmAlQuraCalendar", value: "UmAlQuraCalendar" }] }, rt, f, { name: "datePattern", type: "string", value: "{day.integer(3)}" }, { name: "monthPattern", type: "string", value: "{month.abbreviated(2)}" }, { name: "yearPattern", type: "string", value: "{year.abbreviated(1)}" }, { name: "minYear", type: "number", value: 0 }, { name: "maxYear", type: "number", value: 3e3 }, ].sort(t("name")) }); break; case "FlipView": c = null; a = ko.observableArray(i); l = new n({ template: "FlipView", isReady: !0, header: { toolbar: [{ label: "reverse", icon: "rotate", onclick: function () { a.reverse() } }, { label: "sort asc", icon: "sort", onclick: function () { a.sort(function (n, t) { return n.label == t.label ? 0 : n.label > t.label ? 1 : -1 }) } }, { label: "sort desc", icon: "sort", onclick: function () { a.sort(function (n, t) { return n.label == t.label ? 0 : n.label > t.label ? -1 : 1 }) } }] }, options: { itemsSource: ko.observableArray(i) }, editors: [k, { name: "itemsSpacing", type: "number", value: 0 }, { name: "currentPage", type: "number", value: 0 }, { name: "next", type: "action", disabled: !0 }, { name: "previous", type: "action", disabled: !0 }, ].sort(t("name")) }); break; case "Flyout": c = null; l = new n({ template: "Flyout", isReady: !0, editors: et }); break; case "SettingsFlyout": c = null; l = new n({ template: "SettingsFlyout", isReady: !0, editors: [{ name: "settingsCommandId", type: "string", value: "settingsFlyoutCommand" }, { name: "width", type: "selector", options: [{ label: "narrow", value: "narrow" }, { label: "wide", value: "wide" }], value: "wide" }, ].sort(t("name")) }); break; case "Hub": c = null; l = new n({ template: "Hub", isReady: !0, editors: [g, k, nt, { name: "sectionOnScreen", type: "number", value: -1 }].sort(t("name")) }); break; case "HubSection": c = null; l = new n({ isReady: !0, editors: [tt, { name: "isHeaderStatic", type: "boolean", value: !1 }].sort(t("name")) }); break; case "ItemContainer": c = null; a = ko.observableArray(i.slice(0, 15)); l = new n({ isReady: !0, template: "ItemContainer", header: { toolbar: [{ label: "reverse", icon: "rotate", onclick: function () { a.reverse() } }, { label: "sort asc", icon: "sort", onclick: function () { a.sort(function (n, t) { return n.label == t.label ? 0 : n.label > t.label ? 1 : -1 }) } }, { label: "sort desc", icon: "sort", onclick: function () { a.sort(function (n, t) { return n.label == t.label ? 0 : n.label > t.label ? -1 : 1 }) } }] }, itemsSource: a, editors: [{ name: "draggable", type: "boolean", value: !1 }, { name: "selectioDisabled", type: "boolean", value: !1 }, { name: "swipeOrientation ", type: "selector", options: $.map(WinJS.UI.Orientation, function (n, t) { return { label: t, value: n } }), value: "horizontal" }, it, d].sort(t("name")) }); break; case "ListView": c = null; a = ko.observableArray(i); l = new n({ template: "ListView", isReady: !0, header: { toolbar: [{ label: "reverse", icon: "rotate", onclick: function () { a.reverse() } }, { type: "separator" }, { label: "sort asc", icon: "sort", onclick: function () { a.sort(function (n, t) { return n.label == t.label ? 0 : n.label > t.label ? 1 : -1 }) } }, { label: "sort desc", icon: "sort", onclick: function () { a.sort(function (n, t) { return n.label == t.label ? 0 : n.label > t.label ? -1 : 1 }) } }] }, options: { itemsSource: a, groupDataSource: { groupKey: function (n) { return n.label.toUpperCase().charAt(0) }, groupData: function (n) { return { header: n.label.toUpperCase().charAt(0) } }, groupSorter: function (n, t) { return n.charCodeAt(0) - t.charCodeAt(0) } } }, editors: [g, { name: "maxDeferredItemCleanup", type: "number", value: 25 }, { name: "maxLeadingPages", type: "number", value: 0 }, { name: "maxTrailingPages", type: "number", value: 0 }, { name: "pagesToLoadThreshold ", type: "number", value: 1 }, nt, { name: "loadingBehaviour", type: "selector", options: [{ label: "randomaccess", value: "randomaccess" }, { label: "incremental", value: "incremental" }] }, { name: "itemsDraggable", type: "boolean" }, { name: "itemsReorderable", type: "boolean" }, { name: "selectionMode", type: "selector", options: $.map(WinJS.UI.SelectionMode, function (n, t) { return { label: t, value: n } }), value: "none" }, d, { name: "groupHeaderTapBehaviour", type: "selector", options: $.map(WinJS.UI.TapBehavior, function (n, t) { return { label: t, value: n } }), value: "none" }, { name: "layout", type: "selector", options: [{ label: "List", value: { type: WinJS.UI.ListLayout } }, { label: "Grid", value: "Grid" }, { label: "Grid (2 x *) Left", value: { type: WinJS.UI.GridLayout, maximumRowsOrColumns: 2, orientation: "vertical" } }, { label: "Grid (* x 10)", value: { type: WinJS.UI.GridLayout } }] }].sort(t("name")) }); break; case "Menu": c = null; l = new n({ isReady: !0, template: "Menu", options: { anchor: $("#anchor")[0] }, editors: et }); break; case "MenuCommand": c = null; l = new n({ isReady: !0, editors: [s].concat(ut).sort(t("name")) }); break; case "NavBar": c = null; l = new n({ isReady: !0, template: "NavBar", editors: [w, f, b, e, o].sort(t("name")) }); break; case "NavBarContainer": c = null; l = new n({ isReady: !0, template: "NavBarContainer", options: { itemsSource: ko.observableArray(i.slice(0, 5)) }, editors: [{ name: "currentIndex", type: "number", value: "2" }, { name: "fixedSize", type: "boolean" }, { name: "layout", type: "selector", options: $.map(WinJS.UI.Orientation, function (n, t) { return { label: t, value: n } }), value: "horizontal" }, { name: "maxRows", type: "number", value: 1 }, ].sort(t("name")) }); break; case "NavBarCommand": c = null; l = new n({ isReady: !0, editors: [s, v, y, { name: "location", type: "string", value: "#" }, { name: "splitButton", type: "boolean" }, { name: "splitOpened", type: "boolean" }, { name: "state", type: "object" }].sort(t("name")) }); break; case "Pivot": c = null; l = new n({ isReady: !0, template: "Pivot", editors: [{ name: "title", type: "string", value: "Pivot Title" }, { name: "selectedIndex", type: "selector", options: [{ label: 0, value: 0 }, { label: 1, value: 1 }, { label: 2, value: 2 }], value: 0 }, { name: "locked", type: "boolean" }].sort(t("name")) }); break; case "PivotItem": c = null; l = new n({ isReady: !0, editors: [tt, ].sort(t("name")) }); break; case "Rating": c = null; l = new n({ isReady: !0, editors: [{ name: "averageRating", type: "number", value: 3.7 }, { name: "disabled", type: "boolean" }, { name: "maxRating", type: "number", value: 10 }, { name: "userRating", type: "number", value: 2 }, { name: "tooltipStrings", type: "string", value: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, "Clear your rating"] }, { name: "enableClear", type: "boolean", value: !0 }, ].sort(t("name")) }); break; case "SearchBox": c = null; a = ko.observableArray([]); l = new n({ isReady: !0, template: "SearchBox", itemsSource: a, options: { onquerysubmitted: function (n) { var u, r, t, f, e; if (__DEBUG__(n, "onquerysubmitted event"), u = n.detail, r = u.queryText, a.removeAll(), r.length > 0) for (t = 0, f = i.length; t < f; t++) e = i[t].label, -1 < e.indexOf(r) && a.push(i[t]) }, onsuggestionsrequested: function () { } }, editors: [{ name: "focusOnKeyboardInput", type: "boolean", value: !0 }, ].concat(ft).sort(t("name")) }); break; case "SemanticZoom": c = null; var lt = function (n) { return n.label.toUpperCase().charAt(0) }, at = function (n) { return { header: n.label.toUpperCase().charAt(0) } }, vt = function (n, t) { return n.charCodeAt(0) - t.charCodeAt(0) }, ht = new WinJS.Binding.List(i).createGrouped(lt, at, vt); l = new n({ isReady: !0, template: "SemanticZoom", itemDataSource: ht.dataSource, groupDataSource: ht.groups.dataSource, options: {}, editors: [{ name: "enableButton", type: "boolean", value: !0 }, { name: "zoomedOut", type: "boolean", value: !0 }, { name: "zoomFactor", type: "number", value: .65 }, { name: "zoomInItem", type: "action", value: null, disabled: !0 }, { name: "zoomOutItem", type: "action", value: null, disabled: !0 }, { name: "locked", type: "boolean", value: !1 }].sort(t("name")) }); break; case "SplitView": c = null; l = new n({ isReady: !0, template: "SplitView", editors: [{ name: "paneHidden", type: "boolean", value: !0 }, { name: "panePlacement", type: "selector", options: $.map(WinJS.UI.SplitView.PanePlacement, function (n, t) { return { label: t, value: n } }), value: "left" }, { name: "hiddenDisplayMode", type: "selector", options: $.map(WinJS.UI.SplitView.HiddenDisplayMode, function (n, t) { return { label: t, value: n } }), value: "inline" }, { name: "shownDisplayMode", type: "selector", options: $.map(WinJS.UI.SplitView.ShownDisplayMode, function (n, t) { return { label: t, value: n } }), value: "overlay" }, { name: "hidePane", type: "action", disabled: !0 }, { name: "showPane", type: "action", disabled: !0 }].sort(t("name")) }); break; case "TimePicker": c = null; l = new n({ isReady: !0, editors: [{ name: "clock", type: "selector", options: [{ label: "24 Hour Clock", value: "24HourClock" }, { label: "12 Hour Clock", value: "12HourClock" }] }, rt, { name: "disabled", type: "boolean" }, { name: "minuteIncrement", type: "number", value: 2 }, { name: "hourPattern", type: "string", value: "{hour.integer(3)}" }, { name: "minutePattern", type: "string", value: "{minute.abbreviated(2)}" }, { name: "periodPattern", type: "string", value: "{era.abbreviated(1)}" }, ].sort(t("name")) }); break; case "ToggleSwitch": c = null; l = new n({ isReady: !0, editors: [{ name: "checked", type: "boolean", value: !1 }, { name: "disabled", type: "boolean" }, { name: "title", type: "string", value: "" }, { name: "labelOn", type: "string", value: "On" }, { name: "labelOff", type: "string", value: "Off" }].sort(t("name")) }); break; case "ToolBar": c = null; l = new n({ isReady: !0, template: "ToolBar", editors: [{ name: "shownDisplayMode", type: "selector", options: [{ label: "reduced", value: "reduced" }, { label: "full", value: "full" }] }, h].sort(t("name")) }); break; case "Tooltip": c = null; l = new n({ isReady: !0, template: "Tooltip", editors: [p, { name: "content", type: "string", value: "Hello, Tooltip!" }, { name: "infotip", type: "boolean" }, h, { name: "open", type: "action", disabled: !0 }, { name: "close", type: "action", disabled: !0 }].sort(t("name")) }); break; case "ViewBox": c = null; l = new n({ isReady: !0, editors: [] }); break; default: alert(u) } return ot = null, $.extend(!0, { name: ct.name, type: u, template: "Control", header: null, footer: null, options: ot, editors: c, control: ko.observable(null), onclick: function () { __DEBUG__(this, "target"); r.target(this) }, onAfterRender: function () { } }, l) }); r.target = ko.observable(null); u = $("<button>")[0]; try { $(u).html("<div><\/div>"); __DEBUG__(u.outerHTML); ht = new WinJS.UI.Rating(u); __DEBUG__(u.outerHTML); c = 0 } catch (lt) { __DEBUG__($("<div>")[0].outerHTML); __DEBUG__(u.outerHTML); c = 0 } }